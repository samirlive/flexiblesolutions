<div id="paypal-button-container" style="width:250px"></div>
<script src="https://www.paypal.com/sdk/js?client-id={{ clientId }}&locale={{ locale }}&currency={{ currency }}" data-partner-attribution-id="{{ partnerAttributionId }}"></script>
<script>
    let createPayPalOrderFromPaymentPageUrl = "{{ createPayPalOrderFromPaymentPageUrl }}";
    let completePayPalOrderFromPaymentPageUrl = "{{ completePayPalOrderFromPaymentPageUrl }}";
    let cancelPayPalPaymentUrl = "{{ cancelPayPalPaymentUrl }}";
    let errorPayPalPaymentUrl = "{{ errorPayPalPaymentUrl }}";
    let availableCountries = {{ available_countries|json_encode|raw }};
    let updatePayPalOrderUrl = "{{ path('sylius_paypal_plugin_update_paypal_order') }}";

    paypal.Buttons({
        style: {
            color: 'gold',
            layout: 'horizontal',
            label: 'checkout',
        },
        locale: '{{ locale }}',
        createOrder: function(data, actions) {
            return fetch(createPayPalOrderFromPaymentPageUrl, {
                method: 'post'
            }).then(function(res) {
                document.forms[0].classList.add('loading');
                return res.status === 400 ? window.location.reload() : res.json();
            }).then(data => data.order_id);
        },
        onApprove: function(data, actions) {
            return fetch(completePayPalOrderFromPaymentPageUrl, {
                method: 'post'
            }).then(res => res.json()).then(details => window.location.href = details.return_url);
        },
        onCancel: function (data, actions) {
            return fetch(cancelPayPalPaymentUrl, {
                method: 'post',
                headers: { 'content-type': 'application/json' },
                body: JSON.stringify({ payPalOrderId: data.orderID })
            }).then(window.location.reload());
        },
        onError: function (error) {
            return fetch(errorPayPalPaymentUrl, {
                method: 'post',
                headers: {},
                body: error
            }).then(window.location.reload());
        },
        onShippingChange: function(data, actions) {
            if (!availableCountries.filter(country => country === data.shipping_address.country_code).length) {
                return actions.reject();
            }

            return fetch(updatePayPalOrderUrl, {
                method: 'post',
                headers: { 'content-type': 'application/json' },
                body: JSON.stringify(data)
            }).then(res => {
                if (!res || res.error) {
                    return actions.reject();
                }

                return actions.resolve();
            });
        }
    }).render('#paypal-button-container');
</script>
